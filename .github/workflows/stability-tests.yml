name: Stability Tests

on:
  schedule:
    # 每天凌晨2点运行
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_duration:
        description: 'Test duration in hours'
        required: true
        default: '1'
        type: choice
        options:
          - '1'
          - '4'
          - '8'
          - '24'

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  stability-tests:
    name: Long Running Stability Tests
    runs-on: ubuntu-latest
    timeout-minutes: 1500  # 25小时超时

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore tests/Occop.StabilityTests/Occop.StabilityTests.csproj

    - name: Run Stability Tests
      run: |
        # 移除Skip属性以运行长时间测试
        dotnet test tests/Occop.StabilityTests/Occop.StabilityTests.csproj \
          --configuration Release \
          --verbosity normal \
          --logger "trx;LogFileName=stability-tests.trx" \
          --collect:"XPlat Code Coverage" \
          --filter "Category=Stability&Duration!=24Hours" \
          || true

    - name: Run 24 Hour Test
      if: github.event.inputs.test_duration == '24' || github.event_name == 'schedule'
      run: |
        dotnet test tests/Occop.StabilityTests/Occop.StabilityTests.csproj \
          --configuration Release \
          --verbosity detailed \
          --logger "trx;LogFileName=24hour-stability-test.trx" \
          --filter "Category=Stability&Duration=24Hours" \
          || true

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: stability-test-results
        path: '**/stability-tests.trx'

    - name: Upload 24 Hour Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: 24hour-test-results
        path: '**/*24hour-stability-test.trx'

    - name: Analyze Results
      if: always()
      run: |
        echo "Analyzing stability test results..."
        # 这里可以添加自定义的结果分析脚本

    - name: Create Issue on Failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Stability Test Failure',
            body: 'Stability tests failed. Please investigate.\n\nRun: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}',
            labels: ['bug', 'stability', 'automated']
          })
